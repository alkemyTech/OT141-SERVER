paths:
  # GET
  /categories:
    get:
      security:
        - bearerAuth: []
      description: "service to retrive all registered categories"
      tags:
        - Categories
      summary: "will return a list of existing categories"
      responses:
        200:
          $ref: "#/components/responses/getAllCategories"
        204:
          $ref: "#/components/responses/noCategoryFound"
        500:
          $ref: "#/components/responses/ServerError"

    # POST
    post:
      security:
        - bearerAuth: []
      tags:
        - Categories
      summary: "will add a new category to DB"
      description: "add a new category to DB"
      requestBody:
        description: "request with values"
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Category-formdata"
              
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryPost"
      responses:
        201:
          $ref: "#/components/responses/categoryCreatedSuccessfully"

        422:
          $ref: "#/components/responses/categoryCreatedValidationError"

        500:
          $ref: "#/components/responses/ServerError"
   
    # PUT
  /categories/{id}:
    put:
      security:
        - bearerAuth: []
      tags:
        - Categories
      summary: "update an existing category by provinding the correct id"
      description: "this endpoint is in charge of making an update of the selected category"
      parameters:
        - in: path
          name: id
          description: "the id of the category that needs to be updated"
          required: true
          schema:
            type: integer
            example: 5
      requestBody:
        description: "category update"
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Category-formdata"

          application/json:
            schema:
              type: object
              $ref: "#/components/schemas/CategoryUpdate"
      responses:
        200:
          $ref: "#/components/responses/UpdatedSuccessfully"
        404:
          $ref: "#/components/responses/CategoryNotFound"
        500:
          $ref: "#/components/responses/ServerError"
    # GET
    get:
      security:
        - bearerAuth: []
      tags:
        - Categories
      summary: "Returns the category that corresponds with the selected id"
      description: "This endpoint will return the category that corresponds with the choosen id"
      parameters:
        - in: path
          name: id
          description: "the id of the category you want to see"
          required: true
          schema:
            type: integer
            example: 3
      responses:
        200:
          $ref: "#/components/responses/getCategoryById"
        404:
          $ref: "#/components/responses/CategoryNotFound"
        500:
          $ref: "#/components/responses/ServerError"

    # DELETE
    delete:
      security:
        - bearerAuth: []
      tags:
        - Categories
      summary: "Delete category"
      description: "This endpoint will delete the category that corresponds with the choosen id"
      parameters:
        - in: path
          name: id
          description: "the id of the category you want to delete"
          required: true
          schema:
            type: integer
            example: 6
      responses:
        200:
          $ref: "#/components/responses/deletedSuccessfully"
        404:
          $ref: "#/components/responses/CategoryNotFound"
        500:
          $ref: "#/components/responses/ServerError"

components:
  # SCHEMAS
  schemas:
    CategoryPost:
      properties:
        name:
          description: "name of the category"
          type: string
          example: "recreation"
        description:
          description: "description of the category"
          type: string
          example: "playing games at the park"

    Category-formdata:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        image:
          type: string
          format: base64

    CategoryUpdate:
      required: id
      type: object
      properties:
        name:
          description: "name of the category"
          type: string
          example: "category one"
        description:
          description: "description of the category"
          type: string
          example: "help others by teaching what you know"

    Category:
      properties:
        name:
          description: "name of the category"
          type: string
          example: "recreation"
        description:
          description: "category description"
          example: "play games with kids"
          type: "string"
        image:
          description": image of the category
          type: string
          example: "https://ecologiahoy.net/wp-content/uploads/2020/02/paisajes-natutrales-ecologiaverde-1.jp"

  # Responses

  responses:
    # Verb POST ( Category - responses )
    categoryCreatedSuccessfully:
      description: "category created succesfully"
      content:
        application/json:
          schema:
            properties:
              meta:
                type: object
                properties:
                  status:
                    type: number
                    example: 201
                  ok:
                    type: boolean
                    example: true
              data:
                example:
                  {}

    categoryCreatedValidationError:
      description: "Validation errors"
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  status:
                    type: number
                    example: 422
                  ok:
                    example: false
              data:
                example: null
              errors:
                type: object
                properties:
                  name:
                    type: object
                    properties:
                      value:
                        type: string
                        example: "Tut"
                      msg:
                        type: string
                        example: "String must be more than 4 characters"
                  content:
                    msg:
                      type: string
                      example: Input "required"

    ServerError:
      description: "Server error"
      content:
        application/json:
          schema:
            type: object
            example:
              {
                meta: { status: 503, ok: "false" },
                data: null,
                errors: { msg: "Contact to administrator" },
              }

    # Verb put ( Category - responses )
    UpdatedSuccessfully:
      description: "updated successfully"
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Category updated"
              category:
                type: object
                properties:
                  id:
                    type: integer
                    example: 5
                  name:
                    type: string
                    example: "recreation"
                  description:
                    type: string
                    example: "come and play with the kids"
                  image:
                    type: string
                    example: "https://www.lluiscodina.com/wp-content/uploads/2019/05/navegacion-taxonomias-sitio-web.png"
   
    CategoryNotFound:
      description: "Category not found"
      content:
        application/json:
          schema:
            type: object
            properties:
              messege:
                type: string
                example: "Category not found"

    getAllCategories:
      description: "it shows a list with all the categories"
      content:
        application/json:
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: true
              count:
                type: integer
                example: "3"
              categories:
                example: [{ "name": "recreation" }, { "name": "donations" }]
    
    noCategoryFound:
      description: "is not possible to return any category as there are no categories created"
      content:
        application/json::
          schema:
            type: object
            properties:
              ok:
                type: boolean
                example: false
              messege:
                type: string
                example: "There are no categories created"

    # Verb get ( CategoryById - responses )
    getCategoryById:
      description: "category chosen by id"
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Category"
    # verb delete (Category delete - responses)
    deletedSuccessfully:
      description: "deleted succesfully"
      content:
        application/json:
          schema:
            type: object
            example:
              {
                "del": "true",
                "messege": "category with id 3, was deleted successfully",
              }
          properties:
            del:
              type: boolean
              example: true
            message:
              type: string
              example: "activity with id 6 was deleted succesfully"
